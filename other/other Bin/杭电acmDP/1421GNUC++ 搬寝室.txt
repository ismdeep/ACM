看了其他人的,都感觉要么解释不好,要么代码写的不好. 我来总结下


首先,看到这个题目是不是和搬寝室那个题目很象呢?

那个题目的状态转移方程:
f[物品对数][物品个数];

f[i-1][j-2]=min(f[i][j-1],f[i-1][j-2]+(a[j]-a[j-1])*(a[j]-a[j]-1);

这个公式好简单的~,
还是s[物品组数][物品个数](I为I副筷子，J为总共筷子)
现在转入正题,这个题目要求每一组有3个筷子,前2个的差的平方最小,
首先和前面题目一样先排序对把,显然从大到小排(因为这样完全可以转化成搬寝室 那个一样的思想)
比如取第2队物品,那么第一对已经取完保存在数组里面了,
那么从s[2][3*2+1]计算到s[2][n],
为什么这样就可以呢?
仔细想下,第2组,前面只要有2个可以作为最大的筷子了,一定满足题目意思的了,所以一直计算下去,
状态转移方程和前面一样~
int m = s[i-1][j-2]+(a[j]-a[j-1])*(a[j]-a[j-1]);
s[i][j]=min(m,s[i][j-1]);
简单把,ac他把~
ps:排序从大到小很精妙~


#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int cmp(const void *a,const void *b)
{
    return *(int *)a-*(int *)b;
}
int f[2001][2001];
int main()
{
    int a[2001],i,j,k,n,p;
    while(scanf("%d%d",&n,&k)!=EOF)
    {
        a[0]=-10000;
        for(i=1;i<=n;i++)
            scanf("%d",a+i);
        memset(f,0,sizeof(f));
        qsort(a,n+1,sizeof(a[0]),cmp);
        for(i=1;i<=k;i++)
        {
            for(j=1;j<=i;j++)
            {
                f[i][2*i]+=(a[2*j]-a[2*j-1])*(a[2*j]-a[2*j-1]);
            }
            for(j=2*i+1;j<=n;j++)
            {
                int t=f[i-1][j-2]+(a[j]-a[j-1])*(a[j]-a[j-1]);
                if(t>f[i][j-1])
                    t=f[i][j-1];
                f[i][j]=t;
            }
        }
        printf("%d\n",f[k][n]);
    }
}
