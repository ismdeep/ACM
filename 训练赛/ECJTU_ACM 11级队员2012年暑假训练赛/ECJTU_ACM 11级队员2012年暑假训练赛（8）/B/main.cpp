// Project name : B ( Modular Inverse ) 
// File name    : main.cpp
// Author       : iCoding
// E-mail       : honi.linux@gmail.com
// Date & Time  : Fri Aug 10 13:23:03 2012


#include <iostream>
#include <stdio.h>
#include <string>
#include <cmath>
#include <algorithm>
using namespace std;

/*************************************************************************************/
/* data */

#ifndef MAXN
#define MAXN 2000
#endif

/*************************************************************************************/
/* procedure */

bool iCanGo[MAXN];

void iInit()
{
    /*init iCanGo*/
    for (int i = 0; i < MAXN; i++)
    {
        iCanGo[i] = true;
    }
}

void iJudge(int a, int n)
{
    /*give me a TLE????? Come on,,,go on!!!!!!*/
    iInit();
    bool iEnd   = false;
    bool iFound = false;
    int iIndex  = 0;
    while (!iEnd)
    {
        if ((n * iIndex + 1) % a == 0)
        {
            cout << (n * iIndex + 1) / a << endl;
            iEnd   = true;
            iFound = true;
        }
        else
        {
            if (iCanGo[(n * iIndex + 1) % a] == false)
            {
                iEnd = true;
            }
           // iCanGo[(n * iIndex + 1) % a] = false;
            cout << (n *iIndex + 1) % a << endl;
        }
        iIndex++;
    }
    if (iFound == false)
    {
        cout << "Not Exist" << endl;
    }

    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!***************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /**************************                                              ******************/
    /*************************************************  ***************************************/
    /*************************************************  ***************************************/
    /*************************************************  *************************             */
    /*************************************************  ***************************************/
    /*************************************************  ***************************************/
    /*************************************************  ************ **************************/
    /*************************************************  ***************************************/
    /*************************************************  ***************************************/
    /********************************************** **** **********     ***********************/
    /*************************************************************        *********************/
    /**************                                            ********************************/
    /********************************************** *******************************************/
    /*********************************************** ******************************************/
    /******************************************************                               *****/
    /************************************************  *                         **************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /****************************                   *******************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    /******************************************************************************************/
    }

/*************************************************************************************/
/* main */
int main()
{
    int iT;
    cin >> iT;
    while (iT--)
    {
        int a, n;
        cin >> a >> n;
        iJudge(a, n);
    }
    return 0;
}
// end 
// Code by Sublime text 2
// iCoding@CodeLab 

