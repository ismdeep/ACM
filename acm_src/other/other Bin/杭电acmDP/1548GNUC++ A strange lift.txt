#include <queue>
#include <stdio.h>
using namespace std;
int value[500];
int flag[500];


int n;
struct node{
    int step;
    int count;
    node(int s=1, int c = 0)
    {
        step = s;
        count = c;
    }
};
int bfs(int start, int end,int max)
{
    queue<node> q;
    memset(flag,0,sizeof(flag));
    q.push( node(start,0) );
    flag[start] = 1;
    while(!q.empty())
    {
        node now = q.front();
        
        q.pop();
        if(now.step==end)
        {
            return now.count;
        }
        if(value[now.step]==0 )
            continue;
        int t = now.step+value[now.step];
        if(t<=max && flag[t]==0)
        {
            q.push( node(t,now.count+1) ) ;
            flag[t]=1;
        }
        t = now.step-value[now.step];
        if(t>0 && flag[t]==0)
        {
            q.push( node(t,now.count+1) );
            flag[t]=1;
        }
    }
    return -1;

}

int main()
{
    int start,end;
    while( scanf("%d",&n),n!=0)
    {
        
        scanf("%d%d",&start,&end);
        memset(value,300,sizeof(value));
        for(int i = 1;i<=n;i++)
            scanf("%d",&value[i]);
        printf("%d\n",bfs(start,end,n));
    }

}
